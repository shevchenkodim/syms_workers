version: "3.9"

volumes:
  static_volume:
  media_volume:

networks:
  proxy-frontend-backend-postgres:
    driver: bridge

services:
  postgres:
    container_name: postgres-dev
    image: library/postgres:13.2-alpine
    env_file:
      - ./.env.db.development
    networks:
      - proxy-frontend-backend-postgres

  backend:
    container_name: backend-dev
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    command: /start.dev.sh
    volumes:
      - './backend/:/usr/src/backend'
      - 'static_volume:/usr/src/backend/staticfiles'
      - 'media_volume:/usr/src/backend/mediafiles'
    expose:
      - 8000
    env_file:
      - ./backend/.env.development
    networks:
      - proxy-frontend-backend-postgres
    depends_on:
      - postgres

  frontend:
    container_name: frontend-dev
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - '/usr/src/frontend/node_modules'
      - './frontend:/usr/src/frontend'
      - 'static_volume:/usr/src/backend/staticfiles'
      - 'media_volume:/usr/src/backend/mediafiles'
    expose:
      - 8080
    depends_on:
      - backend
    networks:
      - proxy-frontend-backend-postgres
    environment:
      - NODE_ENV=development

  proxy:
    container_name: proxy-dev
    image: library/nginx:1.19.7-alpine
    ports:
      - '8000:80'
    depends_on:
      - frontend
    volumes:
      - './proxy/nginx.dev.conf:/etc/nginx/nginx.conf:ro'
      - 'static_volume:/usr/src/backend/staticfiles'
      - 'media_volume:/usr/src/backend/mediafiles'
    networks:
      - proxy-frontend-backend-postgres
